% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plot_network.R
\name{get_edge_list}
\alias{get_edge_list}
\title{Get list of edges}
\usage{
get_edge_list(
  df_edges,
  df_vertices,
  edge_shape_color,
  edge_shape_scale = 1,
  edge_shape_size_normalization = TRUE
)
}
\arguments{
\item{df_edges}{date.frame, data.frame with the definition of edges by the columns `from`, `to`, `weight`, `level`, `set`.}

\item{df_vertices}{data.frame with user defined coordinates `level`, `vertice`, `set`, `x`, `y` for each vertice. As a example of such data.frame, you could apply get_coord(network) to your network.}

\item{edge_shape_color}{string of RGBA color for the lines, e.g. edge_shape_color = "rgba(0,0,255,0.5)" for blue color with opacity 0.5.}

\item{edge_shape_scale}{integer describing scale (thickness) of the lines with the smallest weight. Other edges with different weights are proportionally scaled. Default is 1.}

\item{edge_shape_size_normalization}{boolean, TRUE means that the size of the edges is normalize so the maximal size is equivalent to vertice size. This will override `edge_shape_scale` parameter. Default TRUE.}
}
\value{
list of edges with specified scale and color.
}
\description{
The function return edges which is needed in plot_network() function.
}
\examples{


network <- create_source(set = c(2,2),
                         weight = c(1,2)) \%>\%
  add_exit()

get_edge_list(df_edges = network,
              df_vertices = get_coord(df_edges = network),
              edge_shape_color = "rgba(0,255,0,1.)")


}
