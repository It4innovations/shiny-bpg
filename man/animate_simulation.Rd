% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/animate_simulation.R
\name{animate_simulation}
\alias{animate_simulation}
\title{Animate simulation}
\usage{
animate_simulation(
  df_edges,
  input,
  df_text = NULL,
  timestep = 1,
  speed = 200,
  graph_title = "<b>Network flow simulation</b>",
  plotly_annotations = NULL,
  edge_shape_color = "rgba(0,100,200,0.4)",
  edge_shape_scale = 1,
  exit_name = "exit",
  snap = NULL
)
}
\arguments{
\item{df_edges}{data.frame with the definition of edges by the columns `from`, `to`, `weight`, `level`, `set`.}

\item{input}{a `CVCS_simulation` object get from a \code{\link{simulate_flow}} or directly data.frame with columns `snap`, `level`, `x`, `y`, `text`, `remaining_time`.}

\item{df_text}{data.frame, data.frame containing columns `x`, `y`, `text` and `snap`. It will put `text` at `[x, y]` coordinates at time `snap`. Also see \code{\link{add_text}} and \code{\link{add_level_text}}. This is not used if input is a `CVCS_simulation` object. In that case it will use text from that object.}

\item{timestep}{numeric, a timestep in which should the simulation progress.}

\item{speed}{numeric, the speed of the animation in miliseconds.}

\item{graph_title}{string, graph title.}

\item{plotly_annotations}{list, a plotly annotation may be used for static text. See more in \code{\link[plotly]{add_annotations}}}

\item{edge_shape_color}{string, a color name used for edge shapes. Plotly names or rgba notation should be used.}

\item{edge_shape_scale}{numeric, a number which will multiple the edge shapes size. Might be useful if the weights are really high, or small.}

\item{exit_name}{string, a name of exit vertice.}

\item{snap}{numeric vector, this variable can be used to put the text only in certain timesteps (snaps).}
}
\value{
plotly animation
}
\description{
Animate simulation
}
\examples{

network <- create_source(set = c(2,2), weight = 2) \%>\%
 add_level_set(weight = c(3,1),
               previous_set = c(1,2),
               set = c(1,3)) \%>\%
  add_fully_connected(weight = 3,
                      set = 1) \%>\%
  add_exit()

res <- simulate_flow(network)

animate_simulation(network,
                   res,
                   snap = 0:10)

}
